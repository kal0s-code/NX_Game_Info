name: Build macOS App

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Extract build metadata
      id: metadata
      run: |
        METADATA=$(dotnet msbuild macOS/NX_Game_Info.csproj -nologo -t:PrintBuildMetadata)
        VERSION=$(echo "$METADATA" | awk -F= '/GameInfoVersion=/ {print $2; exit}')
        BUILD_NUMBER=$(echo "$METADATA" | awk -F= '/GameInfoBuildNumber=/ {print $2; exit}')
        if [ -z "$VERSION" ] || [ -z "$BUILD_NUMBER" ]; then
          echo "Failed to resolve build metadata" >&2
          exit 1
        fi
        echo "version=$VERSION" >> "$GITHUB_OUTPUT"
        echo "build_number=$BUILD_NUMBER" >> "$GITHUB_OUTPUT"

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Install macOS workload
      run: dotnet workload install macos --skip-signing

    - name: Restore dependencies
      run: dotnet restore macOS/NX_Game_Info.csproj --nologo

    - name: Sync Info.plist metadata
      run: |
        /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${{ steps.metadata.outputs.version }}" macOS/Info.plist 2>/dev/null || /usr/libexec/PlistBuddy -c "Add :CFBundleShortVersionString string ${{ steps.metadata.outputs.version }}" macOS/Info.plist
        /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${{ steps.metadata.outputs.build_number }}" macOS/Info.plist 2>/dev/null || /usr/libexec/PlistBuddy -c "Add :CFBundleVersion string ${{ steps.metadata.outputs.build_number }}" macOS/Info.plist

    - name: Build
      run: dotnet build macOS/NX_Game_Info.csproj --configuration Release --no-restore --nologo

    - name: Publish ARM64
      run: dotnet publish macOS/NX_Game_Info.csproj --configuration Release --self-contained -p:CreatePackage=true --no-restore --nologo

    - name: Create DMG
      run: |
        hdiutil create -volname "NX Game Info" \
          -srcfolder "macOS/bin/Release/net9.0-macos15.0/osx-arm64/NX Game Info.app" \
          -ov -format UDZO \
          "NX_Game_Info-${{ steps.metadata.outputs.version }}.dmg"

    - name: Publish CLI (osx-arm64)
      run: |
        mkdir -p artifacts/cli/osx-arm64
        dotnet publish src/NX.GameInfo.Cli/NX.GameInfo.Cli.csproj --configuration Release -r osx-arm64 --self-contained -o artifacts/cli/osx-arm64

    - name: Package CLI artifact (osx-arm64)
      run: |
        cd artifacts/cli
        zip -r "nx-game-info-cli-osx-arm64-${{ steps.metadata.outputs.version }}.zip" osx-arm64

    - name: Upload DMG
      uses: actions/upload-artifact@v4
      with:
        name: NX_Game_Info-macOS-DMG
        path: NX_Game_Info-*.dmg

    - name: Upload .app bundle (ARM64)
      uses: actions/upload-artifact@v4
      with:
        name: NX_Game_Info-macOS-ARM64
        path: macOS/bin/Release/net9.0-macos15.0/osx-arm64/NX Game Info.app

    - name: Upload CLI artifact (osx-arm64)
      uses: actions/upload-artifact@v4
      with:
        name: nx-game-info-cli-osx-arm64
        path: artifacts/cli/nx-game-info-cli-osx-arm64-${{ steps.metadata.outputs.version }}.zip

    - name: Create Release (on tags)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          NX_Game_Info-*.dmg
          macOS/bin/Release/net9.0-macos15.0/osx-arm64/publish/NX Game Info-*.pkg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
